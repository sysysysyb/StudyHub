name: Sync & Deploy (develop ‚Üí main on preview success)

on:
  schedule:
    - cron: "0 0 * * *" # Îß§Ïùº ÏûêÏ†ï(UTC)
  workflow_dispatch:

permissions:
  contents: write

env:
  UPSTREAM_REPO: https://github.com/OZ-Coding-School/oz_externship_fe_02_team4
  DISCORD_WEBHOOK_YML: .github/workflows/discord-notifications.yml

jobs:
  # 1) upstream ‚Üí develop Î®∏ÏßÄ (webhook ymlÎßå Ï†úÏô∏)
  sync_develop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          ref: develop

      - name: Configure Git
        run: |
          git config --global user.name "sysysysyb"
          git config --global user.email "baeksy6067@gmail.com"

      - name: Add upstream & fetch
        run: |
          if ! git remote | grep -q '^upstream$'; then
            git remote add upstream "${UPSTREAM_REPO}"
          fi
          git fetch upstream --prune
          git fetch origin --prune

      - name: Merge upstream/develop into develop
        run: |
          git merge upstream/develop --no-edit --allow-unrelated-histories || true

      - name: Remove discord webhook workflow from develop
        run: |
          git rm --ignore-unmatch -f "${DISCORD_WEBHOOK_YML}"
          if ! git diff --quiet --staged; then
            git commit -m "üî• chore(ci): remove discord webhook workflow on develop"
          fi

      - name: Push develop
        run: git push origin develop

  # 2) develop Í∏∞Ï§Ä Vercel Preview Î∞∞Ìè¨
  deploy_preview:
    needs: sync_develop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: develop

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: npm run build

      - name: Vercel Pull (preview env)
        run: |
          VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID }} \
          VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }} \
          npx vercel pull --environment=preview \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --yes

      - name: Vercel Build (local)
        run: |
          VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID }} \
          VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }} \
          npx vercel build \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --yes

      - name: Deploy to Vercel (Preview, prebuilt)
        run: |
          VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID }} \
          VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }} \
          npx vercel deploy --prebuilt \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --yes \
            --debug

  # 3) Preview ÏÑ±Í≥µÏãúÏóêÎßå develop ‚Üí main Î®∏ÏßÄ
  update_main:
    needs: deploy_preview
    if: ${{ needs.deploy_preview.result == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          ref: main

      - name: Configure Git
        run: |
          git config --global user.name "sysysysyb"
          git config --global user.email "baeksy6067@gmail.com"

      - name: Fetch origin
        run: git fetch origin --prune

      # ‚ö†Ô∏è reset Í∏àÏßÄ ‚Üí mergeÎ°úÎßå developÏùÑ mainÏóê Î∞òÏòÅ
      - name: Merge origin/develop into main
        run: |
          git checkout main
          git merge origin/develop --no-edit -X theirs || true

      - name: Remove discord webhook workflow from main
        run: |
          git rm --ignore-unmatch -f "${DISCORD_WEBHOOK_YML}"
          if ! git diff --quiet --staged; then
            git commit -m "üî• chore(ci): remove discord webhook workflow on main"
          fi

      - name: Push main
        run: git push origin main
